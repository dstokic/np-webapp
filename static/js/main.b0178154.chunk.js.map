{"version":3,"sources":["components/Header.js","components/Home.js","components/DisplayParksWith.js","components/National.js","components/Live.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","message","Home","useState","park","setPark","parkURL","setParkURL","park2","setPark2","parkURL2","setParkURL2","park3","setPark3","parkURL3","setParkURL3","onMouseEnter","Axios","get","then","response","console","log","data","fullName","url","href","target","src","alt","DisplayParksWith","activity","National","activities","setActivites","setActivity","actParks","setActParks","map","onClick","name","id","Live","setUrl","num","setNum","getUrl","type","placeholder","min","max","onChange","event","value","frameBorder","allow","allowFullScreen","title","App","to","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0178154.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            <h1>{props.message}</h1>\n        </div>\n    )\n}\n\nexport default Header\n","import React, {useState} from 'react'\nimport Header from './Header';\nimport './Home.css';\nimport Axios from 'axios';\n\n\nconst Home = () => {\n\n    const [park, setPark] = useState('');\n    const [parkURL, setParkURL] = useState('');\n\n    const [park2, setPark2] = useState('');\n    const [parkURL2, setParkURL2] = useState('');\n\n    const [park3, setPark3] = useState('');\n    const [parkURL3, setParkURL3] = useState('');\n\n    //Gets the park with a given number\n    //INTENDED TO BE RANDOM EACH TIME BUT I COULDN'T FIGURE OUT HOW TO DO THAT\n    const getPark = () => {\n        Axios.get(\"https://developer.nps.gov/api/v1/parks?api_key=td1QA88iqfQ8mysJya1p1xFOV8PrkdKD7JzkQ90P\").then(\n            (response) => {\n\n                console.log(response);\n                setPark(response.data.data[36].fullName);\n                setParkURL(response.data.data[36].url)\n                \n                setPark2(response.data.data[29].fullName);\n                setParkURL2(response.data.data[29].url)\n\n                setPark3(response.data.data[11].fullName);\n                setParkURL3(response.data.data[11].url)\n            }\n        );\n      };\n\n\n    return (\n        <div className=\"home\" onMouseEnter={getPark}>\n            <Header message=\"National Parks\"/>\n\n            <div className=\"actualPage\">\n\n                <div className=\"words\">\n                    <h1>Featured National Parks</h1>\n                    <p>Hover over the images to see which parks are featured</p>\n                </div>\n\n                <div className=\"images\">\n                    <a className=\"box\" href={parkURL} target=\"_\">\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/2010-kodiak-bear-1.jpg/1200px-2010-kodiak-bear-1.jpg\" alt=\"bear\"></img>\n                        <h2>{park}</h2>\n                    </a>\n                    <a className=\"box\" href={parkURL2} target=\"_\">\n                        <img src=\"https://npca.s3.amazonaws.com/images/8792/b01be64d-0577-4643-81b7-a7fe07e6d1a5-banner.jpg?1490038572\" alt=\"pink flowers\"></img>\n                        <h2>{park2}</h2>\n                    </a>\n                    <a className=\"box\" href={parkURL3} target=\"_\">\n                        <img src=\"https://i.natgeofe.com/k/e4e20690-5d9e-456c-8288-fe0025cf99d5/bobcat-mountain_3x4.jpg\" alt=\"bobcat\"></img>\n                        <h2>{park3}</h2>\n                    </a>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home;\n","import React, {useState} from 'react'\nimport Axios from 'axios';\nimport './DisplayParksWith.css'\n\nconst DisplayParksWith = (props) => {\n\n    const [parksWithAct, setParksWith] = useState([]);\n\n    //Supposed to retrieve the parks that are associated with a given activity\n    //DOES NOT WORK AS INTENDED\n    const getActPark = () => {\n        Axios.get(\"https://developer.nps.gov/api/v1/activities/parks?limit=50&api_key=td1QA88iqfQ8mysJya1p1xFOV8PrkdKD7JzkQ90P\").then(\n        (response) => {\n\n            setParksWith(response);\n            console.log(parksWithAct);\n        }\n        );\n    };\n\n    //<a key={park.id} href=\"#\">{park.fullName}</a>\n    return (\n        <div className=\"displayed\">\n            <h1>{props.activity}</h1>\n\n            <div className=\"activity-box\">\n                {/* An example of what the page would look like if I could get the natural parks to display */}\n                <a href=\"#\" className=\"singleActBox\">First national park (Example)</a>\n                <a href=\"#\" className=\"singleActBox\">Second national park (Example)</a>\n                <a href=\"#\" className=\"singleActBox\">Third national park (Example)</a>\n                <a href=\"#\" className=\"singleActBox\">Fourth national park (Example)</a>\n                <a href=\"#\" className=\"singleActBox\">Fifth national park (Example)</a>\n            </div>\n\n        </div>\n    )\n}\n\nexport default DisplayParksWith\n","import React, {useState} from 'react'\nimport Header from './Header';\nimport './National.css';\nimport Axios from 'axios';\nimport DisplayParksWith from './DisplayParksWith';\n\nconst National = () => {\n\n    const [activities, setActivites] = useState([]);\n    const [activity, setActivity] = useState('');\n\n    //Get all of the different activites\n    const getAct = () => {\n        Axios.get(\"https://developer.nps.gov/api/v1/activities?limit=40&api_key=td1QA88iqfQ8mysJya1p1xFOV8PrkdKD7JzkQ90P\").then(\n            (response) => {\n\n                console.log(response);\n                setActivites(response.data.data);\n\n                console.log({activities});\n\n            }\n        );\n    };\n\n    //Get all of the different parks associated with all the activities\n    const [actParks, setActParks] = useState([]);\n\n    const getActPark = () => {\n        Axios.get(\"https://developer.nps.gov/api/v1/activities/parks?limit=50&sort=&api_key=td1QA88iqfQ8mysJya1p1xFOV8PrkdKD7JzkQ90P\").then(\n        (response) => {\n            console.log(response);\n            setActParks(response.data.data);\n            console.log(actParks);\n        }\n        );\n    };\n\n\n    /* ----- Code that will be displayed on the page ----- */\n    return (\n        <div>\n            {getActPark}\n            <Header message=\"Explore the National Parks\"/>\n\n            <div className=\"options\">\n\n                <p>Choose an activity to display national parks compatible with it</p>\n                <div className=\"dropdown\" onMouseEnter={getAct}>\n\n                    <button className=\"dropbtn\">Available Activities</button>\n                    <div className=\"dropdown-content\">\n                        {activities.map((activity) => (\n                            <a key={activity.id} href=\"#\" onClick={() => setActivity(activity.name)}>{activity.name}</a>\n                        ))\n                        }\n                    </div>\n\n                </div>\n\n            </div>\n\n            <DisplayParksWith activity={activity} />\n                \n        </div>\n    )\n}\n\nexport default National;\n","import React, {useState} from 'react'\nimport Header from './Header';\nimport './Live.css';\nimport Axios from 'axios';\n\n\nconst Live = () => {\n\n    const [url, setUrl] = useState('');\n    const [num, setNum] = useState(5);\n\n    //Gets the url of the park that has been entered\n    const getUrl = () => {\n        Axios.get(\"https://developer.nps.gov/api/v1/webcams?limit=192&api_key=td1QA88iqfQ8mysJya1p1xFOV8PrkdKD7JzkQ90P\").then(\n            (response) => {\n\n                console.log(response);\n                setUrl(response.data.data[num].url);\n            }\n        );\n      };\n\n    //Updates the park number to what the user entered in the input box\n    const changeHandler = (event) => {\n        if(event.target.value > 0 || event.target.value < 191){\n            setNum(event.target.value);\n        }\n    }\n\n    return (\n        <div onMouseEnter={getUrl}>\n            <Header message=\"Live Feeds\"/>\n            <div className=\"actualPage\">\n\n                <div className=\"feed-search\">\n                    <p>Enter a park's number in the list (0-191) to view a webpage with its live feed</p>\n                    <input type=\"number\" id=\"parkName\" name=\"parkName\" placeholder=\"Search for a park's live feed...\" min='0' max='191' onChange={changeHandler}></input>\n                    <input type=\"submit\" id=\"submit\" onClick={getUrl}></input>\n                </div>\n\n                <div className=\"feed\">\n                    <div className=\"feed-box\">\n                    <iframe\n                        src={url}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title=\"Park webcam\"\n                        />\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Live;\n","import './App.css';\nimport Home from './components/Home';\nimport National from './components/National';\nimport Live from './components/Live';\nimport { BrowserRouter, Route, Routes, Link } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n\n          {/* NAVBAR */}\n          <nav>\n            <div className=\"navbar\">\n              <Link to=\"/\" id=\"link\">Home</Link>\n              <Link to=\"/national\" id=\"link\">National Parks</Link>\n              <Link to=\"/live\" id=\"link\">Live Feeds</Link>\n            </div>\n          </nav>\n          \n          <Routes>\n            <Route exact path=\"/\" element={<Home />} />\n            <Route exact path=\"/national\" element={<National />} />\n            <Route exact path=\"/live\" element={<Live />} />\n          </Routes>\n\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}